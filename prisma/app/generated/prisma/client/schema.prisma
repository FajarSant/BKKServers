generator client {
  provider = "prisma-client-js"
  output   = "app/generated/prisma/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum JenisKelamin {
  laki_laki
  perempuan
}

enum PeranPengguna {
  siswa
  alumni
  admin
}

enum JenisPekerjaan {
  magang
  paruh_waktu
  penuh_waktu
  freelance
  kontrak
}

model Pengguna {
  id               Int                @id @default(autoincrement())
  nama             String
  email            String             @unique
  katasandi        String
  peran            PeranPengguna
  nisn             String             @unique
  alamat           String?
  telepon          String?
  tanggalLahir     DateTime?
  jenisKelamin     JenisKelamin?
  dibuatPada       DateTime           @default(now())
  lamaran          Lamaran[]
  lowonganDisimpan LowonganDisimpan[]
}

model Perusahaan {
  id        Int        @id @default(autoincrement())
  nama      String
  gambar    String?
  alamat    String
  email     String     @unique
  telepon   String?
  deskripsi String?
  lowongan  Lowongan[]
}

model Lamaran {
  id             Int       @id @default(autoincrement())
  pengguna       Pengguna  @relation(fields: [penggunaId], references: [id])
  penggunaId     Int
  lowongan       Lowongan  @relation(fields: [lowonganId], references: [id])
  lowonganId     Int
  tanggal        DateTime  @default(now())
  waktuPelamaran DateTime?
}

model Lowongan {
  id              Int                @id @default(autoincrement())
  nama            String
  ketentuan       String
  persyaratan     String
  salary          String?
  jenisPekerjaan  JenisPekerjaan
  perusahaan      Perusahaan         @relation(fields: [perusahaanId], references: [id])
  perusahaanId    Int
  dibuatPada      DateTime           @default(now())
  expiredAt       DateTime?
  linkPendaftaran String?
  lamaran         Lamaran[]
  disimpanOleh    LowonganDisimpan[]
}

model LowonganDisimpan {
  id         Int      @id @default(autoincrement())
  pengguna   Pengguna @relation(fields: [penggunaId], references: [id])
  penggunaId Int
  lowongan   Lowongan @relation(fields: [lowonganId], references: [id])
  lowonganId Int
  tanggal    DateTime @default(now())
}
